[{"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\index.js":"1","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\App.js":"2","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\reportWebVitals.js":"3","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Portfolio\\index.js":"4","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Footer\\index.js":"5","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Nav\\index.js":"6","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\About\\index.js":"7","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Resume\\index.js":"8","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Contact\\index.js":"9","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\utils\\helpers.js":"10","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Projects\\index.js":"11"},{"size":517,"mtime":1615249767828,"results":"12","hashOfConfig":"13"},{"size":1293,"mtime":1615852458314,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1615249767829,"results":"15","hashOfConfig":"13"},{"size":3115,"mtime":1615851422696,"results":"16","hashOfConfig":"13"},{"size":620,"mtime":1615246179793,"results":"17","hashOfConfig":"13"},{"size":1568,"mtime":1615252579107,"results":"18","hashOfConfig":"13"},{"size":495,"mtime":1615246179791,"results":"19","hashOfConfig":"13"},{"size":1309,"mtime":1615246179796,"results":"20","hashOfConfig":"13"},{"size":2431,"mtime":1615246179792,"results":"21","hashOfConfig":"13"},{"size":370,"mtime":1615246179798,"results":"22","hashOfConfig":"13"},{"size":966,"mtime":1615851158417,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1mwn56s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\index.js",[],["49","50"],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\App.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\reportWebVitals.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Portfolio\\index.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Footer\\index.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Nav\\index.js",["51","52","53","54","55"],"import React from 'react';\r\nimport coverImage from '../../assets/my-pic.jpg';\r\n\r\nfunction Nav(props) {\r\n  const {\r\n    nav = [],\r\n    currentNav,\r\n    setCurrentNav,\r\n  } = props;\r\n\r\n  return (\r\n    <nav className=\"bg-gray-800 text-white shadow-lg p-6\">\r\n      {/* <img src={coverImage} className=\"rounded-circle border border-5 img-s\" alt=\"...\"></img> */}\r\n      <div className=\"container mx-auto\">\r\n        <div className=\"sm:flex justify-around\">\r\n          <a className=\"text-6x1 font-bold\" href=\"/\">JOHNGEORGE</a>\r\n\r\n          {/* Menu Items */}\r\n          <ul className=\"sm:selc-center text-xl border-t sm:border-none text-gray-400\">\r\n            <li className=\"sm:inline-block\">\r\n              <a className=\"p-3 hover:text-white\" aria-current=\"page\" href=\"#about\" onClick={() => setCurrentNav(\"About\")}>\r\n                About Me</a>\r\n            </li>\r\n            <li className=\"sm:inline-block\">\r\n              <a className=\"p-3 hover:text-white\" href=\"#\">\r\n                <span onClick={() => setCurrentNav(\"Portfolio\")}>Portfolio</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"sm:inline-block\">\r\n              <a className=\"p-3 hover:text-white\" href=\"#\">\r\n                <span onClick={() => setCurrentNav(\"Contact\")}>Contact</span></a>\r\n            </li>\r\n            <li className=\"sm:inline-block\">\r\n              <a className=\"p-3 hover:text-white\" href=\"#\" onClick={() => setCurrentNav(\"Resume\")}>Resume</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\About\\index.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Resume\\index.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Contact\\index.js",["56"],"import React, { useState } from 'react';\r\n\r\nimport { validateEmail } from '../../utils/helpers';\r\n\r\nfunction ContactForm() {\r\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { name, email, message } = formState;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!errorMessage) {\r\n      console.log('Submit Form', formState);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'email') {\r\n      const isValid = validateEmail(e.target.value);\r\n      if (!isValid) {\r\n        setErrorMessage('Your email is invalid.');\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    } else {\r\n      if (!e.target.value.length) {\r\n        setErrorMessage(`${e.target.name} is required.`);\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n    if (!errorMessage) {\r\n      setFormState({ ...formState, [e.target.name]: e.target.value });\r\n      console.log('Handle Form', formState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"p-5\">\r\n      <h1 data-testid=\"h1tag\">Contact me</h1>\r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Name</label>\r\n          <input type=\"text\" className=\"form-control\" name=\"name\" defaultValue={name} onBlur={handleChange} placeholder=\"John Smith\"></input>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Email address</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" name=\"email\" defaultValue={email} onBlur={handleChange}></input>\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Message:</label>\r\n              <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange}>\r\n              </textarea>\r\n            </div>\r\n            {errorMessage && (\r\n              <div>\r\n                <p className=\"error-text\">{errorMessage}</p>\r\n              </div>\r\n            )}\r\n            <button data-testid=\"button\" className=\"btn btn-primary mb-3\" type=\"submit\">Submit</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\utils\\helpers.js",[],"C:\\Users\\Johnny\\Documents\\GitHub\\My repos\\john-portfolio\\src\\components\\Projects\\index.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":2,"column":8,"nodeType":"63","messageId":"64","endLine":2,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":7,"column":5,"nodeType":"63","messageId":"64","endLine":7,"endColumn":15},{"ruleId":"66","severity":1,"message":"67","line":25,"column":15,"nodeType":"68","endLine":25,"endColumn":60},{"ruleId":"66","severity":1,"message":"67","line":30,"column":15,"nodeType":"68","endLine":30,"endColumn":60},{"ruleId":"66","severity":1,"message":"67","line":34,"column":15,"nodeType":"68","endLine":34,"endColumn":100},{"ruleId":"69","severity":1,"message":"70","line":53,"column":107,"nodeType":"71","endLine":53,"endColumn":115},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'coverImage' is defined but never used.","Identifier","unusedVar","'currentNav' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]